// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/blockchain.proto

package p2p

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transaction message
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        []byte                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver      []byte                 `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_proto_blockchain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Block message
type Block struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Index            int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp        int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Transactions     []*Transaction         `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	MerkleRoot       []byte                 `protobuf:"bytes,4,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	PreviousHash     []byte                 `protobuf:"bytes,5,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	CurrentBlockHash []byte                 `protobuf:"bytes,6,opt,name=current_block_hash,json=currentBlockHash,proto3" json:"current_block_hash,omitempty"`
	Nonce            int32                  `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_proto_blockchain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Block) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *Block) GetPreviousHash() []byte {
	if x != nil {
		return x.PreviousHash
	}
	return nil
}

func (x *Block) GetCurrentBlockHash() []byte {
	if x != nil {
		return x.CurrentBlockHash
	}
	return nil
}

func (x *Block) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// Vote message for consensus
type Vote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	BlockHash     []byte                 `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Approve       bool                   `protobuf:"varint,3,opt,name=approve,proto3" json:"approve,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vote) Reset() {
	*x = Vote{}
	mi := &file_proto_blockchain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{2}
}

func (x *Vote) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Vote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Vote) GetApprove() bool {
	if x != nil {
		return x.Approve
	}
	return false
}

func (x *Vote) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request messages
type SendTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTransactionRequest) Reset() {
	*x = SendTransactionRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionRequest) ProtoMessage() {}

func (x *SendTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{3}
}

func (x *SendTransactionRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type SendTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTransactionResponse) Reset() {
	*x = SendTransactionResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionResponse) ProtoMessage() {}

func (x *SendTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{4}
}

func (x *SendTransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProposeBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	ProposerId    string                 `protobuf:"bytes,2,opt,name=proposer_id,json=proposerId,proto3" json:"proposer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeBlockRequest) Reset() {
	*x = ProposeBlockRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeBlockRequest) ProtoMessage() {}

func (x *ProposeBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeBlockRequest.ProtoReflect.Descriptor instead.
func (*ProposeBlockRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{5}
}

func (x *ProposeBlockRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ProposeBlockRequest) GetProposerId() string {
	if x != nil {
		return x.ProposerId
	}
	return ""
}

type ProposeBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeBlockResponse) Reset() {
	*x = ProposeBlockResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeBlockResponse) ProtoMessage() {}

func (x *ProposeBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeBlockResponse.ProtoReflect.Descriptor instead.
func (*ProposeBlockResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{6}
}

func (x *ProposeBlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProposeBlockResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vote          *Vote                  `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{7}
}

func (x *VoteRequest) GetVote() *Vote {
	if x != nil {
		return x.Vote
	}
	return nil
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{8}
}

func (x *VoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBlockByHeightRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        int32                  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockByHeightRequest) Reset() {
	*x = GetBlockByHeightRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightRequest) ProtoMessage() {}

func (x *GetBlockByHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{9}
}

func (x *GetBlockByHeightRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockByHeightResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockByHeightResponse) Reset() {
	*x = GetBlockByHeightResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightResponse) ProtoMessage() {}

func (x *GetBlockByHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{10}
}

func (x *GetBlockByHeightResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GetBlockByHeightResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type GetLatestBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestBlockRequest) Reset() {
	*x = GetLatestBlockRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockRequest) ProtoMessage() {}

func (x *GetLatestBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockRequest.ProtoReflect.Descriptor instead.
func (*GetLatestBlockRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{11}
}

type GetLatestBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestBlockResponse) Reset() {
	*x = GetLatestBlockResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockResponse) ProtoMessage() {}

func (x *GetLatestBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockResponse.ProtoReflect.Descriptor instead.
func (*GetLatestBlockResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{12}
}

func (x *GetLatestBlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GetLatestBlockResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type GetBlocksFromHeightRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartHeight   int32                  `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlocksFromHeightRequest) Reset() {
	*x = GetBlocksFromHeightRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlocksFromHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksFromHeightRequest) ProtoMessage() {}

func (x *GetBlocksFromHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksFromHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksFromHeightRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlocksFromHeightRequest) GetStartHeight() int32 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

type GetBlocksFromHeightResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*Block               `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlocksFromHeightResponse) Reset() {
	*x = GetBlocksFromHeightResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlocksFromHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksFromHeightResponse) ProtoMessage() {}

func (x *GetBlocksFromHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksFromHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksFromHeightResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{14}
}

func (x *GetBlocksFromHeightResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type GetChainInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChainInfoRequest) Reset() {
	*x = GetChainInfoRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainInfoRequest) ProtoMessage() {}

func (x *GetChainInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainInfoRequest.ProtoReflect.Descriptor instead.
func (*GetChainInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{15}
}

type GetChainInfoResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	LatestHeight         int32                  `protobuf:"varint,1,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	LatestBlockHash      []byte                 `protobuf:"bytes,2,opt,name=latest_block_hash,json=latestBlockHash,proto3" json:"latest_block_hash,omitempty"`
	LatestBlockTimestamp int64                  `protobuf:"varint,3,opt,name=latest_block_timestamp,json=latestBlockTimestamp,proto3" json:"latest_block_timestamp,omitempty"`
	PendingTransactions  int32                  `protobuf:"varint,4,opt,name=pending_transactions,json=pendingTransactions,proto3" json:"pending_transactions,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetChainInfoResponse) Reset() {
	*x = GetChainInfoResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainInfoResponse) ProtoMessage() {}

func (x *GetChainInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainInfoResponse.ProtoReflect.Descriptor instead.
func (*GetChainInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{16}
}

func (x *GetChainInfoResponse) GetLatestHeight() int32 {
	if x != nil {
		return x.LatestHeight
	}
	return 0
}

func (x *GetChainInfoResponse) GetLatestBlockHash() []byte {
	if x != nil {
		return x.LatestBlockHash
	}
	return nil
}

func (x *GetChainInfoResponse) GetLatestBlockTimestamp() int64 {
	if x != nil {
		return x.LatestBlockTimestamp
	}
	return 0
}

func (x *GetChainInfoResponse) GetPendingTransactions() int32 {
	if x != nil {
		return x.PendingTransactions
	}
	return 0
}

type SyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CurrentHeight int32                  `protobuf:"varint,2,opt,name=current_height,json=currentHeight,proto3" json:"current_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_proto_blockchain_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{17}
}

func (x *SyncRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SyncRequest) GetCurrentHeight() int32 {
	if x != nil {
		return x.CurrentHeight
	}
	return 0
}

type SyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*Block               `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_proto_blockchain_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_blockchain_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_proto_blockchain_proto_rawDescGZIP(), []int{18}
}

func (x *SyncResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *SyncResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_blockchain_proto protoreflect.FileDescriptor

const file_proto_blockchain_proto_rawDesc = "" +
	"\n" +
	"\x16proto/blockchain.proto\x12\n" +
	"blockchain\"\x95\x01\n" +
	"\vTransaction\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\fR\x06sender\x12\x1a\n" +
	"\breceiver\x18\x02 \x01(\fR\breceiver\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\"\x82\x02\n" +
	"\x05Block\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12;\n" +
	"\ftransactions\x18\x03 \x03(\v2\x17.blockchain.TransactionR\ftransactions\x12\x1f\n" +
	"\vmerkle_root\x18\x04 \x01(\fR\n" +
	"merkleRoot\x12#\n" +
	"\rprevious_hash\x18\x05 \x01(\fR\fpreviousHash\x12,\n" +
	"\x12current_block_hash\x18\x06 \x01(\fR\x10currentBlockHash\x12\x14\n" +
	"\x05nonce\x18\a \x01(\x05R\x05nonce\"v\n" +
	"\x04Vote\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x02 \x01(\fR\tblockHash\x12\x18\n" +
	"\aapprove\x18\x03 \x01(\bR\aapprove\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"S\n" +
	"\x16SendTransactionRequest\x129\n" +
	"\vtransaction\x18\x01 \x01(\v2\x17.blockchain.TransactionR\vtransaction\"M\n" +
	"\x17SendTransactionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"_\n" +
	"\x13ProposeBlockRequest\x12'\n" +
	"\x05block\x18\x01 \x01(\v2\x11.blockchain.BlockR\x05block\x12\x1f\n" +
	"\vproposer_id\x18\x02 \x01(\tR\n" +
	"proposerId\"J\n" +
	"\x14ProposeBlockResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"3\n" +
	"\vVoteRequest\x12$\n" +
	"\x04vote\x18\x01 \x01(\v2\x10.blockchain.VoteR\x04vote\"B\n" +
	"\fVoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"1\n" +
	"\x17GetBlockByHeightRequest\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x05R\x06height\"Y\n" +
	"\x18GetBlockByHeightResponse\x12'\n" +
	"\x05block\x18\x01 \x01(\v2\x11.blockchain.BlockR\x05block\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"\x17\n" +
	"\x15GetLatestBlockRequest\"W\n" +
	"\x16GetLatestBlockResponse\x12'\n" +
	"\x05block\x18\x01 \x01(\v2\x11.blockchain.BlockR\x05block\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"?\n" +
	"\x1aGetBlocksFromHeightRequest\x12!\n" +
	"\fstart_height\x18\x01 \x01(\x05R\vstartHeight\"H\n" +
	"\x1bGetBlocksFromHeightResponse\x12)\n" +
	"\x06blocks\x18\x01 \x03(\v2\x11.blockchain.BlockR\x06blocks\"\x15\n" +
	"\x13GetChainInfoRequest\"\xd0\x01\n" +
	"\x14GetChainInfoResponse\x12#\n" +
	"\rlatest_height\x18\x01 \x01(\x05R\flatestHeight\x12*\n" +
	"\x11latest_block_hash\x18\x02 \x01(\fR\x0flatestBlockHash\x124\n" +
	"\x16latest_block_timestamp\x18\x03 \x01(\x03R\x14latestBlockTimestamp\x121\n" +
	"\x14pending_transactions\x18\x04 \x01(\x05R\x13pendingTransactions\"M\n" +
	"\vSyncRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12%\n" +
	"\x0ecurrent_height\x18\x02 \x01(\x05R\rcurrentHeight\"m\n" +
	"\fSyncResponse\x12)\n" +
	"\x06blocks\x18\x01 \x03(\v2\x11.blockchain.BlockR\x06blocks\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\xab\x05\n" +
	"\x11BlockchainService\x12Z\n" +
	"\x0fSendTransaction\x12\".blockchain.SendTransactionRequest\x1a#.blockchain.SendTransactionResponse\x12Q\n" +
	"\fProposeBlock\x12\x1f.blockchain.ProposeBlockRequest\x1a .blockchain.ProposeBlockResponse\x129\n" +
	"\x04Vote\x12\x17.blockchain.VoteRequest\x1a\x18.blockchain.VoteResponse\x12]\n" +
	"\x10GetBlockByHeight\x12#.blockchain.GetBlockByHeightRequest\x1a$.blockchain.GetBlockByHeightResponse\x12W\n" +
	"\x0eGetLatestBlock\x12!.blockchain.GetLatestBlockRequest\x1a\".blockchain.GetLatestBlockResponse\x12f\n" +
	"\x13GetBlocksFromHeight\x12&.blockchain.GetBlocksFromHeightRequest\x1a'.blockchain.GetBlocksFromHeightResponse\x12Q\n" +
	"\fGetChainInfo\x12\x1f.blockchain.GetChainInfoRequest\x1a .blockchain.GetChainInfoResponse\x129\n" +
	"\x04Sync\x12\x17.blockchain.SyncRequest\x1a\x18.blockchain.SyncResponseB\x1fZ\x1dgithub.com/blockchain/pkg/p2pb\x06proto3"

var (
	file_proto_blockchain_proto_rawDescOnce sync.Once
	file_proto_blockchain_proto_rawDescData []byte
)

func file_proto_blockchain_proto_rawDescGZIP() []byte {
	file_proto_blockchain_proto_rawDescOnce.Do(func() {
		file_proto_blockchain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_blockchain_proto_rawDesc), len(file_proto_blockchain_proto_rawDesc)))
	})
	return file_proto_blockchain_proto_rawDescData
}

var file_proto_blockchain_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_blockchain_proto_goTypes = []any{
	(*Transaction)(nil),                 // 0: blockchain.Transaction
	(*Block)(nil),                       // 1: blockchain.Block
	(*Vote)(nil),                        // 2: blockchain.Vote
	(*SendTransactionRequest)(nil),      // 3: blockchain.SendTransactionRequest
	(*SendTransactionResponse)(nil),     // 4: blockchain.SendTransactionResponse
	(*ProposeBlockRequest)(nil),         // 5: blockchain.ProposeBlockRequest
	(*ProposeBlockResponse)(nil),        // 6: blockchain.ProposeBlockResponse
	(*VoteRequest)(nil),                 // 7: blockchain.VoteRequest
	(*VoteResponse)(nil),                // 8: blockchain.VoteResponse
	(*GetBlockByHeightRequest)(nil),     // 9: blockchain.GetBlockByHeightRequest
	(*GetBlockByHeightResponse)(nil),    // 10: blockchain.GetBlockByHeightResponse
	(*GetLatestBlockRequest)(nil),       // 11: blockchain.GetLatestBlockRequest
	(*GetLatestBlockResponse)(nil),      // 12: blockchain.GetLatestBlockResponse
	(*GetBlocksFromHeightRequest)(nil),  // 13: blockchain.GetBlocksFromHeightRequest
	(*GetBlocksFromHeightResponse)(nil), // 14: blockchain.GetBlocksFromHeightResponse
	(*GetChainInfoRequest)(nil),         // 15: blockchain.GetChainInfoRequest
	(*GetChainInfoResponse)(nil),        // 16: blockchain.GetChainInfoResponse
	(*SyncRequest)(nil),                 // 17: blockchain.SyncRequest
	(*SyncResponse)(nil),                // 18: blockchain.SyncResponse
}
var file_proto_blockchain_proto_depIdxs = []int32{
	0,  // 0: blockchain.Block.transactions:type_name -> blockchain.Transaction
	0,  // 1: blockchain.SendTransactionRequest.transaction:type_name -> blockchain.Transaction
	1,  // 2: blockchain.ProposeBlockRequest.block:type_name -> blockchain.Block
	2,  // 3: blockchain.VoteRequest.vote:type_name -> blockchain.Vote
	1,  // 4: blockchain.GetBlockByHeightResponse.block:type_name -> blockchain.Block
	1,  // 5: blockchain.GetLatestBlockResponse.block:type_name -> blockchain.Block
	1,  // 6: blockchain.GetBlocksFromHeightResponse.blocks:type_name -> blockchain.Block
	1,  // 7: blockchain.SyncResponse.blocks:type_name -> blockchain.Block
	3,  // 8: blockchain.BlockchainService.SendTransaction:input_type -> blockchain.SendTransactionRequest
	5,  // 9: blockchain.BlockchainService.ProposeBlock:input_type -> blockchain.ProposeBlockRequest
	7,  // 10: blockchain.BlockchainService.Vote:input_type -> blockchain.VoteRequest
	9,  // 11: blockchain.BlockchainService.GetBlockByHeight:input_type -> blockchain.GetBlockByHeightRequest
	11, // 12: blockchain.BlockchainService.GetLatestBlock:input_type -> blockchain.GetLatestBlockRequest
	13, // 13: blockchain.BlockchainService.GetBlocksFromHeight:input_type -> blockchain.GetBlocksFromHeightRequest
	15, // 14: blockchain.BlockchainService.GetChainInfo:input_type -> blockchain.GetChainInfoRequest
	17, // 15: blockchain.BlockchainService.Sync:input_type -> blockchain.SyncRequest
	4,  // 16: blockchain.BlockchainService.SendTransaction:output_type -> blockchain.SendTransactionResponse
	6,  // 17: blockchain.BlockchainService.ProposeBlock:output_type -> blockchain.ProposeBlockResponse
	8,  // 18: blockchain.BlockchainService.Vote:output_type -> blockchain.VoteResponse
	10, // 19: blockchain.BlockchainService.GetBlockByHeight:output_type -> blockchain.GetBlockByHeightResponse
	12, // 20: blockchain.BlockchainService.GetLatestBlock:output_type -> blockchain.GetLatestBlockResponse
	14, // 21: blockchain.BlockchainService.GetBlocksFromHeight:output_type -> blockchain.GetBlocksFromHeightResponse
	16, // 22: blockchain.BlockchainService.GetChainInfo:output_type -> blockchain.GetChainInfoResponse
	18, // 23: blockchain.BlockchainService.Sync:output_type -> blockchain.SyncResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_blockchain_proto_init() }
func file_proto_blockchain_proto_init() {
	if File_proto_blockchain_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_blockchain_proto_rawDesc), len(file_proto_blockchain_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_blockchain_proto_goTypes,
		DependencyIndexes: file_proto_blockchain_proto_depIdxs,
		MessageInfos:      file_proto_blockchain_proto_msgTypes,
	}.Build()
	File_proto_blockchain_proto = out.File
	file_proto_blockchain_proto_goTypes = nil
	file_proto_blockchain_proto_depIdxs = nil
}
